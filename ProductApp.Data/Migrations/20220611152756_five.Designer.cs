// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductApp.Data.Context;

#nullable disable

namespace ProductApp.Data.Migrations
{
    [DbContext(typeof(ProductAppContext))]
    [Migration("20220611152756_five")]
    partial class five
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProductApp.Entity.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductCode = "1",
                            ProductName = "ürün1",
                            ProductPrice = 1000
                        },
                        new
                        {
                            Id = 2,
                            ProductCode = "2",
                            ProductName = "ürün2",
                            ProductPrice = 2000
                        },
                        new
                        {
                            Id = 3,
                            ProductCode = "3",
                            ProductName = "ürün3",
                            ProductPrice = 3000
                        },
                        new
                        {
                            Id = 4,
                            ProductCode = "4",
                            ProductName = "ürün4",
                            ProductPrice = 4000
                        });
                });

            modelBuilder.Entity("ProductApp.Entity.Models.ProductSparepart", b =>
                {
                    b.Property<int>("SparepartID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("SparepartID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductSpareparts");

                    b.HasData(
                        new
                        {
                            SparepartID = 1,
                            ProductID = 1
                        },
                        new
                        {
                            SparepartID = 2,
                            ProductID = 1
                        },
                        new
                        {
                            SparepartID = 3,
                            ProductID = 2
                        },
                        new
                        {
                            SparepartID = 4,
                            ProductID = 2
                        },
                        new
                        {
                            SparepartID = 5,
                            ProductID = 3
                        },
                        new
                        {
                            SparepartID = 6,
                            ProductID = 3
                        },
                        new
                        {
                            SparepartID = 7,
                            ProductID = 4
                        },
                        new
                        {
                            SparepartID = 8,
                            ProductID = 4
                        });
                });

            modelBuilder.Entity("ProductApp.Entity.Models.Sparepart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SparepartCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SparepartName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SparepartPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Spareparts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SparepartCode = "1",
                            SparepartName = "yedek parça 1",
                            SparepartPrice = 100
                        },
                        new
                        {
                            Id = 2,
                            SparepartCode = "2",
                            SparepartName = "yedek parça 2",
                            SparepartPrice = 200
                        },
                        new
                        {
                            Id = 3,
                            SparepartCode = "3",
                            SparepartName = "yedek parça 3",
                            SparepartPrice = 300
                        },
                        new
                        {
                            Id = 4,
                            SparepartCode = "4",
                            SparepartName = "yedek parça 4",
                            SparepartPrice = 400
                        },
                        new
                        {
                            Id = 5,
                            SparepartCode = "5",
                            SparepartName = "yedek parça 5",
                            SparepartPrice = 500
                        },
                        new
                        {
                            Id = 6,
                            SparepartCode = "6",
                            SparepartName = "yedek parça 6",
                            SparepartPrice = 600
                        },
                        new
                        {
                            Id = 7,
                            SparepartCode = "7",
                            SparepartName = "yedek parça 7",
                            SparepartPrice = 700
                        },
                        new
                        {
                            Id = 8,
                            SparepartCode = "8",
                            SparepartName = "yedek parça 8",
                            SparepartPrice = 800
                        });
                });

            modelBuilder.Entity("ProductApp.Entity.Models.ProductSparepart", b =>
                {
                    b.HasOne("ProductApp.Entity.Models.Product", "Product")
                        .WithMany("ProductSpareparts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductApp.Entity.Models.Sparepart", "Sparepart")
                        .WithMany("ProductSpareparts")
                        .HasForeignKey("SparepartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Sparepart");
                });

            modelBuilder.Entity("ProductApp.Entity.Models.Product", b =>
                {
                    b.Navigation("ProductSpareparts");
                });

            modelBuilder.Entity("ProductApp.Entity.Models.Sparepart", b =>
                {
                    b.Navigation("ProductSpareparts");
                });
#pragma warning restore 612, 618
        }
    }
}
